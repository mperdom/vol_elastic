AWSTemplateFormatVersion: "2010-09-09"
Description: EC2 template for Elastic/Kibana
Parameters:
  KeyName:
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the instance"
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: must be the name of an existing EC2 keypair.
    Default: hash-key
  InstanceType: 
    Description: "Webserver EC2 instance type"
    Type: String
    Default: t2.micro
    AllowedValues:
    - t2.micro
    - t2.nano
    - t2.small
    - t2.medium
    - m4.large
  SSHLocation:
    Description: "The IP address range that can be used to SSH to the EC2 instances"
    Type: "String"
    MinLength: "9"
    MaxLength: "18"
    Default: "0.0.0.0/0"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x"
# Mappings:
#   S3Bucket: cfrs772-elk
#start of actual resource creations
Resources:
  ElkS3Role:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -  Effect: "Allow"
             Principal:
               Service:
                 - "ec2.amazonaws.com"
             Action: 
               - "sts:AssumeRole"
      Path: "/"
      # ManagedPolicyArns:
      #   - !Ref awsS3ManagedPolicy
      Policies:
        -
          PolicyName: "ElkS3Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "s3:*"
                Resource:
                  - "arn:aws:s3:::cfrs772-elk"
                  - "arn:aws:s3:::cfrs772-elk/*" 
  ElkS3Profile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref ElkS3Role
  ElkInstance:
    Type: "AWS::EC2::Instance"
    Properties: 
      ImageId: "ami-0915e09cc7ceee3ab" # This is an Amazon Linux AMI
      InstanceType: t2.micro
      IamInstanceProfile: !Ref ElkS3Profile
      KeyName: !Ref KeyName
      SecurityGroups: 
        - !Ref InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: ELK-Instance
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -ex
            aws s3 cp s3://cfrs772-elk/elasticsearch-oss-7.6.2-linux-x86_64.tar.gz /home/ec2-user
            aws s3 cp s3://cfrs772-elk/kibana-7.6.2-linux-x86_64.tar.gz /home/ec2-user
            cd /home/ec2-user
            tar -xzf elasticsearch-oss-7.6.2-linux-x86_64.tar.gz
            tar -xzf kibana-7.6.2-linux-x86_64.tar.gz
            cd elasticsearch-7.6.2/
            touch testfile
            # ./bin/elasticsearch
            # cd kibana-7.6.2-linux-86_64/
            # ./bin/kibana
            echo "reached the end userdata"
  InstanceSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties: 
      GroupDescription: "Enable SSH, HTTP, Elastic, & Kibana"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 9200
          ToPort: 9200
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 5601
          ToPort: 5601
          CidrIp: !Ref SSHLocation